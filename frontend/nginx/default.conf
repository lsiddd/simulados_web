# Este bloco de servidor redireciona todo o tráfego HTTP (porta 80) para HTTPS.
server {
    listen 80;
    server_name localhost;

    # Retorna um redirecionamento 301 (permanente) para a versão HTTPS do site.
    return 301 https://$host$request_uri;
}

# Este bloco de servidor lida com o tráfego HTTPS na porta 443.
server {
    # Habilita o listener para a porta 443 com SSL.
    listen 443 ssl;
    server_name localhost;

    # --- CONFIGURAÇÃO SSL ---
    # Aponta para os certificados gerados pelo serviço 'cert-generator'.
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    # --- CABEÇALHOS DE SEGURANÇA ---
    # Força os navegadores a usarem HTTPS por um ano (HSTS).
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Previne que o site seja incorporado em iframes (clickjacking).
    add_header X-Frame-Options "DENY" always;

    # Previne "MIME-sniffing".
    add_header X-Content-Type-Options "nosniff" always;

    # Política de Segurança de Conteúdo (CSP) para mitigar XSS.
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; connect-src 'self' /api/;" always;

    # Configuração para servir os arquivos do frontend.
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    # Configuração do proxy reverso para a API do backend.
    location /api/ {
        proxy_pass http://backend:5000/api/;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}