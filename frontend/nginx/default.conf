# frontend/nginx/default.conf

# Rate limiting para prevenir abuso.
# - $binary_remote_addr: A chave é o endereço IP do cliente (em formato binário, mais eficiente).
# - zone=api_limit:10m:  Nomeia a zona 'api_limit' com 10MB de espaço. Suficiente para ~160.000 IPs.
# - rate=20r/m:           Permite uma média de 20 requisições por minuto por endereço de IP.
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=20r/m;

# Worker processes e connections (idealmente definidos no nginx.conf global)
# worker_processes auto;

server {
    listen 80;
    server_name localhost;

    # Retorna um redirecionamento 301 (permanente) para a versão HTTPS do site.
    return 301 https://$host$request_uri;
}

server {
    # IMPROVEMENT: Habilita HTTP/2 para melhor performance, adicionando 'http2'.
    listen 443 ssl http2;
    server_name localhost;

    # --- CONFIGURAÇÃO SSL ---
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    # --- CABEÇALHOS DE SEGURANÇA ---
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; connect-src 'self';" always;

    # --- PERFORMANCE: GZIP COMPRESSION ---
    # Habilita a compressão gzip para reduzir o tamanho dos dados transferidos.
    gzip on;
    gzip_vary on; # Adiciona um cabeçalho 'Vary: Accept-Encoding'.
    gzip_proxied any; # Comprime para todas as requisições via proxy.
    gzip_comp_level 6; # Um bom equilíbrio entre uso de CPU e taxa de compressão.
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss;

    # --- AUTENTICAÇÃO ---
    auth_basic "Area Restrita - Insira suas credenciais";
    auth_basic_user_file /etc/nginx/auth/.htpasswd;

    # --- PERFORMANCE: CACHING DE ARQUIVOS ESTÁTICOS ---
    # Instrui os navegadores a armazenarem em cache os arquivos estáticos por um longo período.
    location ~* \.(?:css|js|ico|gif|jpe?g|png|woff2?|eot|ttf|svg)$ {
        root   /usr/share/nginx/html;
        expires 1M; # Cache de 1 mês.
        add_header Cache-Control "public";
        access_log off; # Desabilita o log de acesso a arquivos estáticos para reduzir o I/O do disco.
    }
    
    # Configuração para servir os arquivos do frontend.
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    # Configuração do proxy reverso para a API do backend.
    location /api/ {
        # Aplica a política de rate limiting definida na zona 'api_limit'.
        # - burst=5: Permite que um cliente exceda a taxa em até 5 requisições.
        #   Requisições acima da taxa, mas dentro do burst, são enfileiradas e processadas com atraso.
        #   Requisições que excedem o burst são rejeitadas com um erro 503 (Service Temporarily Unavailable).
        limit_req zone=api_limit burst=5;

        proxy_pass http://backend:5000/api/;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}