# ./frontend/nginx/default.conf

# Rate limiting zones to prevent abuse
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=static_limit:10m rate=100r/m;
# Connection limiting per IP
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

# API cache configuration
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m use_temp_path=off;

# Helper map to bypass cache for non-idempotent methods
map $request_method $skip_cache {
  default     0;
  POST        1;
  PUT         1;
  DELETE      1;
}

# HTTP server to redirect to HTTPS
server {
    listen 80;
    server_name localhost;
    # Enforce HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS server with HTTP/2 and Preload enabled
server {
    # CORRECTED: Use the 'http2 on;' directive on a separate line
    listen 443 ssl;
    http2 on;
    server_name localhost;
    
    # SSL Certificates
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    
    # SSL Hardening
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; connect-src 'self';" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Compression settings
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Basic Authentication
    auth_basic "Area Restrita - Insira suas credenciais";
    auth_basic_user_file /etc/nginx/auth/.htpasswd;
    
    # Limit connections per IP
    limit_conn conn_limit_per_ip 20;
    
    # --- START: MODERN CRITICAL RESOURCE PRELOADING (replaces HTTP/2 Push) ---

    # Preload critical assets for the main page using the Link header
    location = / {
        root /usr/share/nginx/html;
        index index.html;
        add_header Link "</dist/style.bundle.css>; rel=preload; as=style" always;
        add_header Link "</dist/home.bundle.js>; rel=preload; as=script" always;
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }

    location = /index.html {
        root /usr/share/nginx/html;
        add_header Link "</dist/style.bundle.css>; rel=preload; as=style" always;
        add_header Link "</dist/home.bundle.js>; rel=preload; as=script" always;
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }

    # Preload critical assets for the quiz page
    location = /simulado.html {
        root /usr/share/nginx/html;
        add_header Link "</dist/style.bundle.css>; rel=preload; as=style" always;
        add_header Link "</dist/quiz.bundle.js>; rel=preload; as=script" always;
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }
    
    # --- END: CRITICAL RESOURCE PRELOADING ---

    # Caching rules for static assets (CSS/JS)
    location ~* \.(?:css|js)$ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        limit_req zone=static_limit burst=50 nodelay;
        gzip_static on;
        access_log off;
        etag on;
    }
    
    # Caching rules for media and fonts
    location ~* \.(?:ico|gif|jpe?g|png|woff2?|eot|ttf|svg)$ {
        root /usr/share/nginx/html;
        expires 1M;
        add_header Cache-Control "public";
        access_log off;
        add_header Access-Control-Allow-Origin "*";
    }
    
    # General fallback for other files
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }
    
    # --- Backend API Proxy ---

    location /api/simulados {
        proxy_cache api_cache;
        proxy_cache_valid 200 5m;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        add_header X-Cache-Status $upstream_cache_status;
        limit_req zone=api_limit burst=10 nodelay;
        proxy_pass http://backend:5000/api/simulados;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location ~ ^/api/simulados/([^/]+)$ {
        proxy_cache api_cache;
        proxy_cache_valid 200 10m;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        add_header X-Cache-Status $upstream_cache_status;
        limit_req zone=api_limit burst=15 nodelay;
        proxy_pass http://backend:5000/api/simulados/$1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location ~ ^/api/user/ {
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        
        limit_req zone=api_limit burst=20 nodelay;
        proxy_pass http://backend:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /api/ {
      proxy_cache api_cache;
      proxy_cache_bypass $skip_cache;
      proxy_no_cache $skip_cache;
      
      proxy_cache_valid 200 10m;
      proxy_cache_lock on;
      proxy_cache_use_stale updating error timeout;
      
      brotli on;
      brotli_types application/json;
       
      add_header X-Cache-Status $upstream_cache_status;
      limit_req zone=api_limit burst=10 nodelay;
      proxy_pass http://backend:5000/api/;
      
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }
    
    location = /health {
        access_log off;
        proxy_pass http://backend:5000/api/simulados;
        proxy_connect_timeout 1s;
        proxy_send_timeout 1s;
        proxy_read_timeout 3s;
    }
}