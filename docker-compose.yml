# ./docker-compose.yml
---
services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      # We can keep this on debug for now, it's very helpful!
      - RUST_LOG=simulados_backend=debug,actix_web=debug
    expose:
      - 5000
    volumes:
      - ./backend/user_data:/app/user_data
      - ./backend/simulados:/app/simulados:ro
    networks:
      - simulados_net
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # FIX: Add a dependency on Redis being healthy before starting the backend
    depends_on:
      redis:
        condition: service_healthy

    healthcheck:
      # This healthcheck remains the same
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/simulados"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    image: fholzer/nginx-brotli:latest
    restart: unless-stopped
    ports:
      - "10443:443/udp"
      - "10443:443"
      - "10080:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/nginx/auth/.htpasswd:/etc/nginx/auth/.htpasswd:ro
      - nginx_ssl:/etc/nginx/ssl
      - nginx_cache:/var/cache/nginx
    depends_on:
      backend:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M
    entrypoint: /bin/sh
    command: -c "
        apk add --no-cache openssl curl &&
        CERT_FILE=\"/etc/nginx/ssl/fullchain.pem\" &&
        KEY_FILE=\"/etc/nginx/ssl/privkey.pem\" &&
        DAYS_TO_EXPIRY=30 &&
        EXPIRY_SECONDS=$((DAYS_TO_EXPIRY * 86400)) &&
        if [ ! -f \"$$CERT_FILE\" ] || ! openssl x509 -in \"$$CERT_FILE\" -checkend \"$$EXPIRY_SECONDS\" -noout >/dev/null 2>&1; then
          echo \"Certificado SSL não encontrado ou expirando em menos de $$DAYS_TO_EXPIRY dias. Gerando um novo...\";
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout \"$$KEY_FILE\" -out \"$$CERT_FILE\" -subj '/CN=localhost';
          echo 'Certificado gerado com sucesso.';
        else
          echo 'Certificado SSL existente é válido.';
        fi &&
        nginx -g 'daemon off;'
      "
    networks:
      - simulados_net
    healthcheck:
      test: ["CMD", "curl", "-f", "-k", "https://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  redis:
    image: redis:7-alpine
    command: redis-server --save "" --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - simulados_net
    
    # FIX: Add a healthcheck to the Redis container
    healthcheck:
      # Use redis-cli to PING the server to check its status
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  simulados_net:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: simulados_br
    ipam:
      config:
        - subnet: 172.22.0.0/16

volumes:
  nginx_ssl:
    driver: local
  nginx_cache:
    driver: local