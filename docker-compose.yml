# ./docker-compose.yml
---
version: '3.8'

services:
  backend:
    build: ./backend
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
      # OPTIMIZATION: Enable SQLite WAL mode persistence
      - SQLITE_CACHE_SIZE=20000
    expose:
      - 5000
    volumes:
      - ./backend/user_data:/app/user_data
      - ./backend/simulados:/app/simulados:ro  # Read-only for security
    networks:
      - simulados_net
    # OPTIMIZATION: Improved resource allocation
    deploy:
      resources:
        limits:
          cpus: '1.0'        # Increased from 0.5
          memory: 1G         # Increased from 512M
        reservations:
          cpus: '0.5'
          memory: 512M
    # OPTIMIZATION: Health check for better reliability
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/simulados"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    image: nginx:1.25-alpine
    restart: unless-stopped
    ports:
      - "10443:443"
      - "10080:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro  # Read-only for security
      - ./frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/nginx/auth/.htpasswd:/etc/nginx/auth/.htpasswd:ro
      - nginx_ssl:/etc/nginx/ssl
      # OPTIMIZATION: Add nginx cache volume
      - nginx_cache:/var/cache/nginx
    depends_on:
      backend:
        condition: service_healthy  # Wait for backend health check
    # OPTIMIZATION: Better resource allocation for nginx
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M
    # OPTIMIZATION: Improved nginx startup command with performance tuning
    command: >
      sh -c "
        apk add --no-cache openssl curl &&
        if [ ! -f /etc/nginx/ssl/privkey.pem ]; then
          echo 'Gerando certificados SSL autoassinados...';
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/privkey.pem -out /etc/nginx/ssl/fullchain.pem -subj '/CN=localhost';
          echo 'Certificados gerados com sucesso.';
        else
          echo 'Certificados SSL j√° existem.';
        fi &&
        nginx -g 'daemon off;'
      "
    networks:
      - simulados_net
    # OPTIMIZATION: Health check for nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "-k", "https://localhost/api/simulados"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # OPTIMIZATION: Add Redis for advanced caching (optional, can be enabled later)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - simulados_net
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Comment this service out if you don't want Redis initially
    profiles:
      - redis

networks:
  simulados_net:
    driver: bridge
    # OPTIMIZATION: Custom bridge network configuration
    driver_opts:
      com.docker.network.bridge.name: simulados_br
    ipam:
      config:
        - subnet: 172.22.0.0/16

volumes:
  nginx_ssl:
    driver: local
  nginx_cache:
    driver: local
  redis_data:
    driver: local
    # OPTIMIZATION: Use local driver with better performance options
    driver_opts:
      type: none
      o: bind
      device: ./data/redis